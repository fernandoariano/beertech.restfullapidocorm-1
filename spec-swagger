swagger: '2.0'
info:
  description: Beertech
  version: 1.0.0
  title: Simple Beertech API DOC
  # put the contact info for your development or API team
  contact:
    email: aleexsoarees@gmail.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: beer
  description: First Challenge API DOC BeertechTalents

paths:
  /beer/save:
    post:
      tags:
      - beer
      summary: Add a new beer
      operationId: addBeer
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Beer object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/beer'
      responses:
        405:
          description: Invalid input
    put:
      tags:
      - beer
      summary: Update an existing beer
      operationId: updateBeer
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Beer object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/beer'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Beer not found
  /beer/{id}:
    get:
      tags:
      - beer
      summary: Find object by ID
      operationId: getBeerByID
      description: Returns a beer object
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of beer to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/beer'
        400:
          description: Bad input parameter
    delete:
      tags:
      - beer
      summary: Delete beer by ID
      description: For valid response try integer IDs with positive integer value.\
        \ Negative or non-integer values will generate API errors
      operationId: deleteBeer
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the beer object that needs to be deleted
        required: true
        type: integer
        minimum: 1.0
        format: int64
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Beer not found
  /beer/listAll:
    get:
      tags:
      - beer
      summary: List all beers
      operationId: getBeers
      description: Returns all beers
      produces:
      - application/json
      responses:
        200:
            description: Search results
            schema:
              type: array
              items:
                $ref: '#/definitions/beer'
definitions:
  beer:
    type: object
    required:
    - id
    - name
    - price
    properties:
      id:
        type: integer
        description: ID of the beer
        format: Long
      name:
        type: string
        format: String
        description: Name of the beer
        example: Skol
      price:
        type: number
        format: BigDouble
        description: Price of the beer
        example: 2.99

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /beertech/restfullapidocorm/1.0.0
schemes:
 - https
